// <auto-generated />
using ISPSystem.EF.Connections;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace ISPSystem.EF.Migrations
{
    [DbContext(typeof(Connection))]
    [Migration("20210109225142_BancoInicial")]
    partial class BancoInicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ISPSystem.DomainEntities.Carteira", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Composicao");

                    b.Property<string>("Descricao");

                    b.Property<int>("PerfilID");

                    b.HasKey("ID");

                    b.HasIndex("PerfilID")
                        .IsUnique();

                    b.ToTable("Carteira");
                });

            modelBuilder.Entity("ISPSystem.DomainEntities.Participante", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CarteiraID");

                    b.Property<int>("Idade");

                    b.Property<string>("Nome");

                    b.Property<int?>("PerfilID");

                    b.HasKey("ID");

                    b.HasIndex("CarteiraID")
                        .IsUnique()
                        .HasFilter("[CarteiraID] IS NOT NULL");

                    b.HasIndex("PerfilID")
                        .IsUnique()
                        .HasFilter("[PerfilID] IS NOT NULL");

                    b.ToTable("Participante");
                });

            modelBuilder.Entity("ISPSystem.DomainEntities.Perfil", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao");

                    b.Property<int>("Pontuacao");

                    b.HasKey("ID");

                    b.ToTable("Perfil");
                });

            modelBuilder.Entity("ISPSystem.DomainEntities.Rentabilidade", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Ano");

                    b.Property<int>("CarteiraID");

                    b.Property<string>("Mes");

                    b.HasKey("ID");

                    b.HasIndex("CarteiraID");

                    b.ToTable("Rentabilidade");
                });

            modelBuilder.Entity("ISPSystem.DomainEntities.Solicitacao", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ParticipanteID");

                    b.Property<int>("Status");

                    b.HasKey("ID");

                    b.HasIndex("ParticipanteID");

                    b.ToTable("Solicitacao");
                });

            modelBuilder.Entity("ISPSystem.DomainEntities.Carteira", b =>
                {
                    b.HasOne("ISPSystem.DomainEntities.Perfil", "Perfil")
                        .WithOne("Carteira")
                        .HasForeignKey("ISPSystem.DomainEntities.Carteira", "PerfilID")
                        .HasConstraintName("FK_Carteira_Perfil")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ISPSystem.DomainEntities.Participante", b =>
                {
                    b.HasOne("ISPSystem.DomainEntities.Carteira", "Carteira")
                        .WithOne("Participante")
                        .HasForeignKey("ISPSystem.DomainEntities.Participante", "CarteiraID")
                        .HasConstraintName("FK_Participante_Carteira");

                    b.HasOne("ISPSystem.DomainEntities.Perfil", "Perfil")
                        .WithOne("Participante")
                        .HasForeignKey("ISPSystem.DomainEntities.Participante", "PerfilID")
                        .HasConstraintName("FK_Participante_Perfil");
                });

            modelBuilder.Entity("ISPSystem.DomainEntities.Rentabilidade", b =>
                {
                    b.HasOne("ISPSystem.DomainEntities.Carteira", "Carteira")
                        .WithMany("Rentabilidades")
                        .HasForeignKey("CarteiraID")
                        .HasConstraintName("FK_Rentabilidade_Carteira")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ISPSystem.DomainEntities.Solicitacao", b =>
                {
                    b.HasOne("ISPSystem.DomainEntities.Participante", "Participante")
                        .WithMany("Solicitacoes")
                        .HasForeignKey("ParticipanteID")
                        .HasConstraintName("FK_Solicitacao_Participante")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
